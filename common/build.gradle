plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'org.jetbrains.kotlin.kapt'
}

android {
    compileSdk cfg.sdk.compileVersion

    defaultConfig {
        minSdk cfg.sdk.minVersion
        targetSdk cfg.sdk.targetVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility cfg.jvm.compatibility.source
        targetCompatibility cfg.jvm.compatibility.target
    }
    kotlinOptions {
        jvmTarget = cfg.jvm.target
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion versions.composeKotlinExt
    }
    namespace 'com.oborodulin.home.common'
}

dependencies {
    // Logging
    implementation deps.logging.timber
    implementation deps.logging.logger

    // Hilt
    implementation deps.dagger.hilt
    kapt deps.dagger.compiler
    implementation deps.hilt.navigationCompose

    implementation deps.kotlinx.coroutinesCore
    implementation deps.jvm.inject
    implementation deps.kotlin.reflect
    // XML-parser
    implementation deps.xml.xmlpull

    // Compose
    implementation deps.compose.ui
    implementation deps.compose.material
    implementation deps.compose.uiTooling
    implementation deps.compose.uiPreview

    // Coil
    implementation deps.coil.compose
    // Lottie
    implementation deps.lottie.compose

    implementation deps.androidx.coreKtx
    implementation deps.androidx.appcompat
    implementation deps.google.material

    // Compose preview
    debugImplementation deps.androidx.poolingcontainer

    // Testing dependencies
    testImplementation deps.test.junit
    androidTestImplementation deps.test.extJunit
    androidTestImplementation deps.test.espressoCore
}