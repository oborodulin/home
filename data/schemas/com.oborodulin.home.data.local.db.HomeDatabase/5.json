{
  "formatVersion": 1,
  "database": {
    "version": 5,
    "identityHash": "f50c5afcf18ebcd4844251eb64eaa42e",
    "entities": [
      {
        "tableName": "payers",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`payerId` TEXT NOT NULL, `ercCode` TEXT NOT NULL, `fullName` TEXT NOT NULL, `address` TEXT NOT NULL, `totalArea` INTEGER, `livingSpace` INTEGER, `heatedVolume` INTEGER, `paymentDay` INTEGER NOT NULL, `personsNum` INTEGER NOT NULL, `isFavorite` INTEGER NOT NULL, PRIMARY KEY(`payerId`))",
        "fields": [
          {
            "fieldPath": "payerId",
            "columnName": "payerId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "ercCode",
            "columnName": "ercCode",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "fullName",
            "columnName": "fullName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "address",
            "columnName": "address",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "totalArea",
            "columnName": "totalArea",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "livingSpace",
            "columnName": "livingSpace",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "heatedVolume",
            "columnName": "heatedVolume",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "paymentDay",
            "columnName": "paymentDay",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "personsNum",
            "columnName": "personsNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isFavorite",
            "columnName": "isFavorite",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "payerId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "services",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`serviceId` TEXT NOT NULL, `pos` INTEGER, `type` TEXT NOT NULL, PRIMARY KEY(`serviceId`))",
        "fields": [
          {
            "fieldPath": "serviceId",
            "columnName": "serviceId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pos",
            "columnName": "pos",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "serviceId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "services_tl",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`serviceTlId` TEXT NOT NULL, `localeCode` TEXT NOT NULL, `name` TEXT NOT NULL, `measureUnit` TEXT, `descr` TEXT, `servicesId` TEXT NOT NULL, PRIMARY KEY(`serviceTlId`), FOREIGN KEY(`servicesId`) REFERENCES `services`(`serviceId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "serviceTlId",
            "columnName": "serviceTlId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "localeCode",
            "columnName": "localeCode",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "measureUnit",
            "columnName": "measureUnit",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "descr",
            "columnName": "descr",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "servicesId",
            "columnName": "servicesId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "serviceTlId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_services_tl_localeCode_servicesId",
            "unique": true,
            "columnNames": [
              "localeCode",
              "servicesId"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_services_tl_localeCode_servicesId` ON `${TABLE_NAME}` (`localeCode`, `servicesId`)"
          },
          {
            "name": "index_services_tl_servicesId",
            "unique": false,
            "columnNames": [
              "servicesId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_services_tl_servicesId` ON `${TABLE_NAME}` (`servicesId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "services",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "servicesId"
            ],
            "referencedColumns": [
              "serviceId"
            ]
          }
        ]
      },
      {
        "tableName": "payers_services",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`payerServiceId` TEXT NOT NULL, `payersId` TEXT NOT NULL, `servicesId` TEXT NOT NULL, `isAllocateRate` INTEGER NOT NULL, PRIMARY KEY(`payerServiceId`), FOREIGN KEY(`payersId`) REFERENCES `payers`(`payerId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`servicesId`) REFERENCES `services`(`serviceId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "payerServiceId",
            "columnName": "payerServiceId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "payersId",
            "columnName": "payersId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "servicesId",
            "columnName": "servicesId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isAllocateRate",
            "columnName": "isAllocateRate",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "payerServiceId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_payers_services_payersId_servicesId",
            "unique": true,
            "columnNames": [
              "payersId",
              "servicesId"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_payers_services_payersId_servicesId` ON `${TABLE_NAME}` (`payersId`, `servicesId`)"
          },
          {
            "name": "index_payers_services_payersId",
            "unique": false,
            "columnNames": [
              "payersId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_payers_services_payersId` ON `${TABLE_NAME}` (`payersId`)"
          },
          {
            "name": "index_payers_services_servicesId",
            "unique": false,
            "columnNames": [
              "servicesId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_payers_services_servicesId` ON `${TABLE_NAME}` (`servicesId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "payers",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "payersId"
            ],
            "referencedColumns": [
              "payerId"
            ]
          },
          {
            "table": "services",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "servicesId"
            ],
            "referencedColumns": [
              "serviceId"
            ]
          }
        ]
      },
      {
        "tableName": "rates",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`rateId` TEXT NOT NULL, `startDate` TEXT NOT NULL, `fromMeterValue` INTEGER, `toMeterValue` INTEGER, `rateValue` INTEGER NOT NULL, `isPerPerson` INTEGER NOT NULL, `isPrivileges` INTEGER NOT NULL, `servicesId` TEXT NOT NULL, `payersServicesId` TEXT, PRIMARY KEY(`rateId`), FOREIGN KEY(`servicesId`) REFERENCES `services`(`serviceId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`payersServicesId`) REFERENCES `payers_services`(`payerServiceId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "rateId",
            "columnName": "rateId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "startDate",
            "columnName": "startDate",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "fromMeterValue",
            "columnName": "fromMeterValue",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "toMeterValue",
            "columnName": "toMeterValue",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "rateValue",
            "columnName": "rateValue",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isPerPerson",
            "columnName": "isPerPerson",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isPrivileges",
            "columnName": "isPrivileges",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "servicesId",
            "columnName": "servicesId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "payersServicesId",
            "columnName": "payersServicesId",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "rateId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_rates_startDate_fromMeterValue_isPerPerson_isPrivileges_servicesId_payersServicesId",
            "unique": true,
            "columnNames": [
              "startDate",
              "fromMeterValue",
              "isPerPerson",
              "isPrivileges",
              "servicesId",
              "payersServicesId"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_rates_startDate_fromMeterValue_isPerPerson_isPrivileges_servicesId_payersServicesId` ON `${TABLE_NAME}` (`startDate`, `fromMeterValue`, `isPerPerson`, `isPrivileges`, `servicesId`, `payersServicesId`)"
          },
          {
            "name": "index_rates_servicesId",
            "unique": false,
            "columnNames": [
              "servicesId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_rates_servicesId` ON `${TABLE_NAME}` (`servicesId`)"
          },
          {
            "name": "index_rates_payersServicesId",
            "unique": false,
            "columnNames": [
              "payersServicesId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_rates_payersServicesId` ON `${TABLE_NAME}` (`payersServicesId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "services",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "servicesId"
            ],
            "referencedColumns": [
              "serviceId"
            ]
          },
          {
            "table": "payers_services",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "payersServicesId"
            ],
            "referencedColumns": [
              "payerServiceId"
            ]
          }
        ]
      },
      {
        "tableName": "rate_promotions",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`ratePromotionId` TEXT NOT NULL, `paymentMonths` INTEGER NOT NULL, `isPrevRate` INTEGER NOT NULL, `isActive` INTEGER NOT NULL, `ratesId` TEXT NOT NULL, PRIMARY KEY(`ratePromotionId`), FOREIGN KEY(`ratesId`) REFERENCES `rates`(`rateId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "ratePromotionId",
            "columnName": "ratePromotionId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "paymentMonths",
            "columnName": "paymentMonths",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isPrevRate",
            "columnName": "isPrevRate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isActive",
            "columnName": "isActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ratesId",
            "columnName": "ratesId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "ratePromotionId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_rate_promotions_ratesId",
            "unique": false,
            "columnNames": [
              "ratesId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_rate_promotions_ratesId` ON `${TABLE_NAME}` (`ratesId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "rates",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "ratesId"
            ],
            "referencedColumns": [
              "rateId"
            ]
          }
        ]
      },
      {
        "tableName": "meters",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`meterId` TEXT NOT NULL, `num` TEXT NOT NULL, `maxValue` INTEGER NOT NULL, `passportDate` TEXT, `verificationPeriod` INTEGER, `payersServicesId` TEXT NOT NULL, PRIMARY KEY(`meterId`), FOREIGN KEY(`payersServicesId`) REFERENCES `payers_services`(`payerServiceId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "meterId",
            "columnName": "meterId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "num",
            "columnName": "num",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "maxValue",
            "columnName": "maxValue",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "passportDate",
            "columnName": "passportDate",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "verificationPeriod",
            "columnName": "verificationPeriod",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "payersServicesId",
            "columnName": "payersServicesId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "meterId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_meters_num_payersServicesId",
            "unique": true,
            "columnNames": [
              "num",
              "payersServicesId"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_meters_num_payersServicesId` ON `${TABLE_NAME}` (`num`, `payersServicesId`)"
          },
          {
            "name": "index_meters_payersServicesId",
            "unique": false,
            "columnNames": [
              "payersServicesId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_meters_payersServicesId` ON `${TABLE_NAME}` (`payersServicesId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "payers_services",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "payersServicesId"
            ],
            "referencedColumns": [
              "payerServiceId"
            ]
          }
        ]
      },
      {
        "tableName": "meters_tl",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`meterTlId` TEXT NOT NULL, `localeCode` TEXT NOT NULL, `measureUnit` TEXT NOT NULL, `descr` TEXT, `metersId` TEXT NOT NULL, PRIMARY KEY(`meterTlId`), FOREIGN KEY(`metersId`) REFERENCES `meters`(`meterId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "meterTlId",
            "columnName": "meterTlId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "localeCode",
            "columnName": "localeCode",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "measureUnit",
            "columnName": "measureUnit",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "descr",
            "columnName": "descr",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "metersId",
            "columnName": "metersId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "meterTlId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_meters_tl_localeCode_metersId",
            "unique": true,
            "columnNames": [
              "localeCode",
              "metersId"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_meters_tl_localeCode_metersId` ON `${TABLE_NAME}` (`localeCode`, `metersId`)"
          },
          {
            "name": "index_meters_tl_metersId",
            "unique": false,
            "columnNames": [
              "metersId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_meters_tl_metersId` ON `${TABLE_NAME}` (`metersId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "meters",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "metersId"
            ],
            "referencedColumns": [
              "meterId"
            ]
          }
        ]
      },
      {
        "tableName": "meter_values",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`meterValueId` TEXT NOT NULL, `valueDate` TEXT NOT NULL, `meterValue` INTEGER, `metersId` TEXT NOT NULL, PRIMARY KEY(`meterValueId`), FOREIGN KEY(`metersId`) REFERENCES `meters`(`meterId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "meterValueId",
            "columnName": "meterValueId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "valueDate",
            "columnName": "valueDate",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "meterValue",
            "columnName": "meterValue",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "metersId",
            "columnName": "metersId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "meterValueId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_meter_values_metersId",
            "unique": false,
            "columnNames": [
              "metersId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_meter_values_metersId` ON `${TABLE_NAME}` (`metersId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "meters",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "metersId"
            ],
            "referencedColumns": [
              "meterId"
            ]
          }
        ]
      },
      {
        "tableName": "meter_verifications",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`meterVerificationId` TEXT NOT NULL, `startDate` TEXT NOT NULL, `endDate` TEXT, `startMeterValue` INTEGER NOT NULL, `endMeterValue` INTEGER, `isOk` INTEGER NOT NULL, `metersId` TEXT NOT NULL, PRIMARY KEY(`meterVerificationId`), FOREIGN KEY(`metersId`) REFERENCES `meters`(`meterId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "meterVerificationId",
            "columnName": "meterVerificationId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "startDate",
            "columnName": "startDate",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "endDate",
            "columnName": "endDate",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "startMeterValue",
            "columnName": "startMeterValue",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "endMeterValue",
            "columnName": "endMeterValue",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isOk",
            "columnName": "isOk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "metersId",
            "columnName": "metersId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "meterVerificationId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_meter_verifications_metersId",
            "unique": false,
            "columnNames": [
              "metersId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_meter_verifications_metersId` ON `${TABLE_NAME}` (`metersId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "meters",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "metersId"
            ],
            "referencedColumns": [
              "meterId"
            ]
          }
        ]
      },
      {
        "tableName": "receipts",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`receiptId` TEXT NOT NULL, `receiptMonth` INTEGER NOT NULL, `receiptYear` INTEGER NOT NULL, `isPaid` INTEGER NOT NULL, `payersId` TEXT NOT NULL, PRIMARY KEY(`receiptId`), FOREIGN KEY(`payersId`) REFERENCES `payers`(`payerId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "receiptId",
            "columnName": "receiptId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "receiptMonth",
            "columnName": "receiptMonth",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "receiptYear",
            "columnName": "receiptYear",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isPaid",
            "columnName": "isPaid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "payersId",
            "columnName": "payersId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "receiptId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_receipts_payersId_receiptYear_receiptMonth",
            "unique": true,
            "columnNames": [
              "payersId",
              "receiptYear",
              "receiptMonth"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_receipts_payersId_receiptYear_receiptMonth` ON `${TABLE_NAME}` (`payersId`, `receiptYear`, `receiptMonth`)"
          },
          {
            "name": "index_receipts_payersId",
            "unique": false,
            "columnNames": [
              "payersId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_receipts_payersId` ON `${TABLE_NAME}` (`payersId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "payers",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "payersId"
            ],
            "referencedColumns": [
              "payerId"
            ]
          }
        ]
      }
    ],
    "views": [
      {
        "viewName": "meters_view",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT m.*, mtl.*, ps.* FROM meters AS m JOIN meters_tl AS mtl ON mtl.metersId = m.meterId JOIN payers_services AS ps ON ps.payerServiceId = m.payersServicesId JOIN services AS s ON s.serviceId = ps.servicesId ORDER BY ps.payersId, s.pos"
      },
      {
        "viewName": "services_view",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT s.*, stl.* FROM services AS s JOIN services_tl AS stl ON stl.servicesId = s.serviceId"
      },
      {
        "viewName": "last_meters_values_view",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT mv.*, lv.payerId, lv.payerServiceId, lv.paymentYear, lv.paymentMonth FROM meter_values mv JOIN (SELECT p.payerId, ps.payerServiceId, m.meterId, MAX(datetime(v.valueDate)) maxValueDate, CAST(strftime('%Y', v.valueDate) AS INTEGER) paymentYear, CASE WHEN datetime(v.valueDate) BETWEEN datetime(v.valueDate, 'start of month') AND datetime(v.valueDate, 'start of month', '+' || (IFNULL(p.paymentDay, 20) - 1) || ' days') THEN CAST(strftime('%m', v.valueDate) AS INTEGER) WHEN datetime(v.valueDate) BETWEEN datetime(v.valueDate, 'start of month', '+' || IFNULL(p.paymentDay, 20) || ' days') AND datetime(v.valueDate, '+1 months', 'start of month') THEN CAST(strftime('%m', v.valueDate) AS INTEGER) + 1 END paymentMonth FROM meter_values v JOIN meters m ON m.meterId = v.metersId JOIN payers_services AS ps ON ps.payerServiceId = m.payersServicesId JOIN payers AS p ON p.payerId = ps.payersId GROUP BY p.payerId, ps.payerServiceId, m.meterId, CAST(strftime('%Y', v.valueDate) AS INTEGER), CASE WHEN datetime(v.valueDate) BETWEEN datetime(v.valueDate, 'start of month') AND datetime(v.valueDate, 'start of month', '+' || (IFNULL(p.paymentDay, 20) - 1) || ' days') THEN CAST(strftime('%m', v.valueDate) AS INTEGER) WHEN datetime(v.valueDate) BETWEEN datetime(v.valueDate, 'start of month', '+' || IFNULL(p.paymentDay, 20) || ' days') AND datetime(v.valueDate, '+1 months', 'start of month') THEN CAST(strftime('%m', v.valueDate) AS INTEGER) + 1 END) lv ON mv.metersId = lv.meterId AND datetime(mv.valueDate) = lv.maxValueDate"
      },
      {
        "viewName": "prev_meters_values_view",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT mvl.meterValueId, mv.payersId AS payerId, mv.servicesId AS serviceId, sv.type, sv.name, sv.pos, mv.meterId, IFNULL(mv.measureUnit, sv.measureUnit) AS measureUnit, IFNULL(mvl.valueDate, datetime('now')) AS prevLastDate, mvl.meterValue AS prevValue, p.isFavorite, mv.localeCode AS meterlocaleCode, sv.localeCode AS servicelocaleCode, substr('#0.' || '0000000000', 1, 3 + (length(cast(mv.maxValue / 100000.0 as text)) -  CASE WHEN instr(cast(mv.maxValue / 100000.0 as text), '.') = length(cast(mv.maxValue / 100000.0 as text)) - 1 THEN length(cast(mv.maxValue / 100000.0 as text)) + 1 ELSE instr(cast(mv.maxValue / 100000.0 as text), '.') END)) AS valueFormat  FROM meters_view AS mv JOIN services_view AS sv ON sv.serviceId = mv.servicesId  JOIN meter_values AS mvl ON mvl.metersId = mv.meterId  JOIN payers AS p ON p.payerId = mv.payersId  JOIN  (SELECT v.metersId, MAX(datetime(v.valueDate)) maxValueDate  FROM meter_values v JOIN meters m ON m.meterId = v.metersId  JOIN payers_services AS ps ON ps.payerServiceId = m.payersServicesId  JOIN payers AS p ON p.payerId = ps.payersId  WHERE datetime(v.valueDate) <= CASE WHEN datetime('now') > datetime('now', 'start of month', '+' || (IFNULL(p.paymentDay, 20) - 1) || ' days')  THEN datetime('now', 'start of month', '+' || (IFNULL(p.paymentDay, 20) - 1) || ' days')  ELSE datetime('now', '-1 months', 'start of month', '+' || (IFNULL(p.paymentDay, 20) - 1) || ' days') END  GROUP BY v.metersId) mp  ON mp.metersId = mvl.metersId AND mp.maxValueDate = datetime(mvl.valueDate)"
      },
      {
        "viewName": "payment_meters_values_view",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT lmv.payerId, lmv.payerServiceId, lmv.metersId, pmv.meterValue AS startMeterValue, lmv.meterValue AS endMeterValue, (CASE WHEN instr((SELECT measureUnit FROM meters_tl WHERE metersId = lmv.metersId LIMIT 1), '/') = 0 THEN 0 ELSE 1 END) AS derivedUnit, (CASE WHEN instr((SELECT measureUnit FROM meters_tl WHERE metersId = lmv.metersId LIMIT 1), '/') = 0 THEN (lmv.meterValue - pmv.meterValue) ELSE lmv.meterValue END) AS diffMeterValue, lmv.paymentYear, lmv.paymentMonth FROM last_meters_values_view lmv JOIN last_meters_values_view pmv ON pmv.metersId = lmv.metersId AND pmv.paymentYear = (CASE WHEN (lmv.paymentMonth - 1) = 0 THEN lmv.paymentYear - 1 ELSE lmv.paymentYear END) AND pmv.paymentMonth = (CASE WHEN (lmv.paymentMonth - 1) = 0 THEN 12 ELSE lmv.paymentMonth - 1 END)"
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'f50c5afcf18ebcd4844251eb64eaa42e')"
    ]
  }
}