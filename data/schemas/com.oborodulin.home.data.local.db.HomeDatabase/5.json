{
  "formatVersion": 1,
  "database": {
    "version": 5,
    "identityHash": "f3ad704bfa4f2a5b1dd0a4ba7f0e090a",
    "entities": [
      {
        "tableName": "payers",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`payerId` TEXT NOT NULL, `ercCode` TEXT NOT NULL, `fullName` TEXT NOT NULL, `address` TEXT NOT NULL, `totalArea` INTEGER, `livingSpace` INTEGER, `heatedVolume` INTEGER, `paymentDay` INTEGER NOT NULL, `personsNum` INTEGER NOT NULL, `isAlignByPaymentDay` INTEGER NOT NULL, `isFavorite` INTEGER NOT NULL, PRIMARY KEY(`payerId`))",
        "fields": [
          {
            "fieldPath": "payerId",
            "columnName": "payerId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "ercCode",
            "columnName": "ercCode",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "fullName",
            "columnName": "fullName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "address",
            "columnName": "address",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "totalArea",
            "columnName": "totalArea",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "livingSpace",
            "columnName": "livingSpace",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "heatedVolume",
            "columnName": "heatedVolume",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "paymentDay",
            "columnName": "paymentDay",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "personsNum",
            "columnName": "personsNum",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isAlignByPaymentDay",
            "columnName": "isAlignByPaymentDay",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isFavorite",
            "columnName": "isFavorite",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "payerId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "services",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`serviceId` TEXT NOT NULL, `pos` INTEGER, `type` TEXT NOT NULL, PRIMARY KEY(`serviceId`))",
        "fields": [
          {
            "fieldPath": "serviceId",
            "columnName": "serviceId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pos",
            "columnName": "pos",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "serviceId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "services_tl",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`serviceTlId` TEXT NOT NULL, `localeCode` TEXT NOT NULL, `name` TEXT NOT NULL, `measureUnit` TEXT, `descr` TEXT, `servicesId` TEXT NOT NULL, PRIMARY KEY(`serviceTlId`), FOREIGN KEY(`servicesId`) REFERENCES `services`(`serviceId`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "serviceTlId",
            "columnName": "serviceTlId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "localeCode",
            "columnName": "localeCode",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "measureUnit",
            "columnName": "measureUnit",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "descr",
            "columnName": "descr",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "servicesId",
            "columnName": "servicesId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "serviceTlId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_services_tl_localeCode_servicesId",
            "unique": true,
            "columnNames": [
              "localeCode",
              "servicesId"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_services_tl_localeCode_servicesId` ON `${TABLE_NAME}` (`localeCode`, `servicesId`)"
          },
          {
            "name": "index_services_tl_servicesId",
            "unique": false,
            "columnNames": [
              "servicesId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_services_tl_servicesId` ON `${TABLE_NAME}` (`servicesId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "services",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "servicesId"
            ],
            "referencedColumns": [
              "serviceId"
            ]
          }
        ]
      },
      {
        "tableName": "payers_services",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`payerServiceId` TEXT NOT NULL, `payersId` TEXT NOT NULL, `servicesId` TEXT NOT NULL, `isPrivilege` INTEGER NOT NULL, `isAllocateRate` INTEGER NOT NULL, PRIMARY KEY(`payerServiceId`), FOREIGN KEY(`payersId`) REFERENCES `payers`(`payerId`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED, FOREIGN KEY(`servicesId`) REFERENCES `services`(`serviceId`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "payerServiceId",
            "columnName": "payerServiceId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "payersId",
            "columnName": "payersId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "servicesId",
            "columnName": "servicesId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isPrivilege",
            "columnName": "isPrivilege",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isAllocateRate",
            "columnName": "isAllocateRate",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "payerServiceId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_payers_services_payersId_servicesId",
            "unique": true,
            "columnNames": [
              "payersId",
              "servicesId"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_payers_services_payersId_servicesId` ON `${TABLE_NAME}` (`payersId`, `servicesId`)"
          },
          {
            "name": "index_payers_services_payersId",
            "unique": false,
            "columnNames": [
              "payersId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_payers_services_payersId` ON `${TABLE_NAME}` (`payersId`)"
          },
          {
            "name": "index_payers_services_servicesId",
            "unique": false,
            "columnNames": [
              "servicesId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_payers_services_servicesId` ON `${TABLE_NAME}` (`servicesId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "payers",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "payersId"
            ],
            "referencedColumns": [
              "payerId"
            ]
          },
          {
            "table": "services",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "servicesId"
            ],
            "referencedColumns": [
              "serviceId"
            ]
          }
        ]
      },
      {
        "tableName": "rates",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`rateId` TEXT NOT NULL, `startDate` TEXT NOT NULL, `fromMeterValue` INTEGER, `toMeterValue` INTEGER, `rateValue` INTEGER NOT NULL, `isPerPerson` INTEGER NOT NULL, `isPrivileges` INTEGER NOT NULL, `servicesId` TEXT NOT NULL, `payersServicesId` TEXT, PRIMARY KEY(`rateId`), FOREIGN KEY(`servicesId`) REFERENCES `services`(`serviceId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`payersServicesId`) REFERENCES `payers_services`(`payerServiceId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "rateId",
            "columnName": "rateId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "startDate",
            "columnName": "startDate",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "fromMeterValue",
            "columnName": "fromMeterValue",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "toMeterValue",
            "columnName": "toMeterValue",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "rateValue",
            "columnName": "rateValue",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isPerPerson",
            "columnName": "isPerPerson",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isPrivileges",
            "columnName": "isPrivileges",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "servicesId",
            "columnName": "servicesId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "payersServicesId",
            "columnName": "payersServicesId",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "rateId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_rates_startDate_fromMeterValue_isPerPerson_isPrivileges_servicesId_payersServicesId",
            "unique": true,
            "columnNames": [
              "startDate",
              "fromMeterValue",
              "isPerPerson",
              "isPrivileges",
              "servicesId",
              "payersServicesId"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_rates_startDate_fromMeterValue_isPerPerson_isPrivileges_servicesId_payersServicesId` ON `${TABLE_NAME}` (`startDate`, `fromMeterValue`, `isPerPerson`, `isPrivileges`, `servicesId`, `payersServicesId`)"
          },
          {
            "name": "index_rates_servicesId",
            "unique": false,
            "columnNames": [
              "servicesId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_rates_servicesId` ON `${TABLE_NAME}` (`servicesId`)"
          },
          {
            "name": "index_rates_payersServicesId",
            "unique": false,
            "columnNames": [
              "payersServicesId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_rates_payersServicesId` ON `${TABLE_NAME}` (`payersServicesId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "services",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "servicesId"
            ],
            "referencedColumns": [
              "serviceId"
            ]
          },
          {
            "table": "payers_services",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "payersServicesId"
            ],
            "referencedColumns": [
              "payerServiceId"
            ]
          }
        ]
      },
      {
        "tableName": "service_promotions",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`servicePromotionId` TEXT NOT NULL, `paymentMonths` INTEGER NOT NULL, `isPrevRate` INTEGER NOT NULL, `isActive` INTEGER NOT NULL, `servicesId` TEXT NOT NULL, `payersServicesId` TEXT, PRIMARY KEY(`servicePromotionId`), FOREIGN KEY(`servicesId`) REFERENCES `services`(`serviceId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`payersServicesId`) REFERENCES `payers_services`(`payerServiceId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "servicePromotionId",
            "columnName": "servicePromotionId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "paymentMonths",
            "columnName": "paymentMonths",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isPrevRate",
            "columnName": "isPrevRate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isActive",
            "columnName": "isActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "servicesId",
            "columnName": "servicesId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "payersServicesId",
            "columnName": "payersServicesId",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "servicePromotionId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_service_promotions_servicesId",
            "unique": false,
            "columnNames": [
              "servicesId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_service_promotions_servicesId` ON `${TABLE_NAME}` (`servicesId`)"
          },
          {
            "name": "index_service_promotions_payersServicesId",
            "unique": false,
            "columnNames": [
              "payersServicesId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_service_promotions_payersServicesId` ON `${TABLE_NAME}` (`payersServicesId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "services",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "servicesId"
            ],
            "referencedColumns": [
              "serviceId"
            ]
          },
          {
            "table": "payers_services",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "payersServicesId"
            ],
            "referencedColumns": [
              "payerServiceId"
            ]
          }
        ]
      },
      {
        "tableName": "meters",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`meterId` TEXT NOT NULL, `num` TEXT NOT NULL, `type` TEXT NOT NULL, `maxValue` INTEGER NOT NULL, `passportDate` TEXT, `verificationPeriod` INTEGER, `payersId` TEXT NOT NULL, PRIMARY KEY(`meterId`), FOREIGN KEY(`payersId`) REFERENCES `payers`(`payerId`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "meterId",
            "columnName": "meterId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "num",
            "columnName": "num",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "maxValue",
            "columnName": "maxValue",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "passportDate",
            "columnName": "passportDate",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "verificationPeriod",
            "columnName": "verificationPeriod",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "payersId",
            "columnName": "payersId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "meterId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_meters_payersId_num_type",
            "unique": true,
            "columnNames": [
              "payersId",
              "num",
              "type"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_meters_payersId_num_type` ON `${TABLE_NAME}` (`payersId`, `num`, `type`)"
          },
          {
            "name": "index_meters_payersId",
            "unique": false,
            "columnNames": [
              "payersId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_meters_payersId` ON `${TABLE_NAME}` (`payersId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "payers",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "payersId"
            ],
            "referencedColumns": [
              "payerId"
            ]
          }
        ]
      },
      {
        "tableName": "meters_tl",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`meterTlId` TEXT NOT NULL, `localeCode` TEXT NOT NULL, `measureUnit` TEXT NOT NULL, `descr` TEXT, `metersId` TEXT NOT NULL, PRIMARY KEY(`meterTlId`), FOREIGN KEY(`metersId`) REFERENCES `meters`(`meterId`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "meterTlId",
            "columnName": "meterTlId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "localeCode",
            "columnName": "localeCode",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "measureUnit",
            "columnName": "measureUnit",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "descr",
            "columnName": "descr",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "metersId",
            "columnName": "metersId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "meterTlId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_meters_tl_localeCode_metersId",
            "unique": true,
            "columnNames": [
              "localeCode",
              "metersId"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_meters_tl_localeCode_metersId` ON `${TABLE_NAME}` (`localeCode`, `metersId`)"
          },
          {
            "name": "index_meters_tl_metersId",
            "unique": false,
            "columnNames": [
              "metersId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_meters_tl_metersId` ON `${TABLE_NAME}` (`metersId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "meters",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "metersId"
            ],
            "referencedColumns": [
              "meterId"
            ]
          }
        ]
      },
      {
        "tableName": "meter_values",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`meterValueId` TEXT NOT NULL, `valueDate` TEXT NOT NULL, `meterValue` INTEGER, `metersId` TEXT NOT NULL, PRIMARY KEY(`meterValueId`), FOREIGN KEY(`metersId`) REFERENCES `meters`(`meterId`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "meterValueId",
            "columnName": "meterValueId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "valueDate",
            "columnName": "valueDate",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "meterValue",
            "columnName": "meterValue",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "metersId",
            "columnName": "metersId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "meterValueId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_meter_values_metersId",
            "unique": false,
            "columnNames": [
              "metersId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_meter_values_metersId` ON `${TABLE_NAME}` (`metersId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "meters",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "metersId"
            ],
            "referencedColumns": [
              "meterId"
            ]
          }
        ]
      },
      {
        "tableName": "meter_verifications",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`meterVerificationId` TEXT NOT NULL, `startDate` TEXT NOT NULL, `endDate` TEXT, `startMeterValue` INTEGER NOT NULL, `endMeterValue` INTEGER, `isOk` INTEGER NOT NULL, `metersId` TEXT NOT NULL, PRIMARY KEY(`meterVerificationId`), FOREIGN KEY(`metersId`) REFERENCES `meters`(`meterId`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "meterVerificationId",
            "columnName": "meterVerificationId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "startDate",
            "columnName": "startDate",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "endDate",
            "columnName": "endDate",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "startMeterValue",
            "columnName": "startMeterValue",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "endMeterValue",
            "columnName": "endMeterValue",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isOk",
            "columnName": "isOk",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "metersId",
            "columnName": "metersId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "meterVerificationId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_meter_verifications_metersId",
            "unique": false,
            "columnNames": [
              "metersId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_meter_verifications_metersId` ON `${TABLE_NAME}` (`metersId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "meters",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "metersId"
            ],
            "referencedColumns": [
              "meterId"
            ]
          }
        ]
      },
      {
        "tableName": "payers_services_meters",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`payerServiceMeterId` TEXT NOT NULL, `payersServicesId` TEXT NOT NULL, `metersId` TEXT NOT NULL, PRIMARY KEY(`payerServiceMeterId`), FOREIGN KEY(`payersServicesId`) REFERENCES `payers_services`(`payerServiceId`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED, FOREIGN KEY(`metersId`) REFERENCES `meters`(`meterId`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "payerServiceMeterId",
            "columnName": "payerServiceMeterId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "payersServicesId",
            "columnName": "payersServicesId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "metersId",
            "columnName": "metersId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "payerServiceMeterId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_payers_services_meters_payersServicesId_metersId",
            "unique": true,
            "columnNames": [
              "payersServicesId",
              "metersId"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_payers_services_meters_payersServicesId_metersId` ON `${TABLE_NAME}` (`payersServicesId`, `metersId`)"
          },
          {
            "name": "index_payers_services_meters_payersServicesId",
            "unique": false,
            "columnNames": [
              "payersServicesId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_payers_services_meters_payersServicesId` ON `${TABLE_NAME}` (`payersServicesId`)"
          },
          {
            "name": "index_payers_services_meters_metersId",
            "unique": false,
            "columnNames": [
              "metersId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_payers_services_meters_metersId` ON `${TABLE_NAME}` (`metersId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "payers_services",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "payersServicesId"
            ],
            "referencedColumns": [
              "payerServiceId"
            ]
          },
          {
            "table": "meters",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "metersId"
            ],
            "referencedColumns": [
              "meterId"
            ]
          }
        ]
      },
      {
        "tableName": "receipts",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`receiptId` TEXT NOT NULL, `receiptMonth` INTEGER NOT NULL, `receiptYear` INTEGER NOT NULL, `isPaid` INTEGER NOT NULL, `payersId` TEXT NOT NULL, PRIMARY KEY(`receiptId`), FOREIGN KEY(`payersId`) REFERENCES `payers`(`payerId`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "receiptId",
            "columnName": "receiptId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "receiptMonth",
            "columnName": "receiptMonth",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "receiptYear",
            "columnName": "receiptYear",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isPaid",
            "columnName": "isPaid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "payersId",
            "columnName": "payersId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "receiptId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_receipts_payersId_receiptYear_receiptMonth",
            "unique": true,
            "columnNames": [
              "payersId",
              "receiptYear",
              "receiptMonth"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_receipts_payersId_receiptYear_receiptMonth` ON `${TABLE_NAME}` (`payersId`, `receiptYear`, `receiptMonth`)"
          },
          {
            "name": "index_receipts_payersId",
            "unique": false,
            "columnNames": [
              "payersId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_receipts_payersId` ON `${TABLE_NAME}` (`payersId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "payers",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "payersId"
            ],
            "referencedColumns": [
              "payerId"
            ]
          }
        ]
      },
      {
        "tableName": "receipt_lines",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`receiptLineId` TEXT NOT NULL, `isPaid` INTEGER NOT NULL, `receiptsId` TEXT NOT NULL, `servicesId` TEXT NOT NULL, `ratesId` TEXT NOT NULL, `servicePromotionsId` TEXT, `meterValuesId` TEXT, PRIMARY KEY(`receiptLineId`), FOREIGN KEY(`receiptsId`) REFERENCES `receipts`(`receiptId`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED, FOREIGN KEY(`servicesId`) REFERENCES `services`(`serviceId`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED, FOREIGN KEY(`ratesId`) REFERENCES `rates`(`rateId`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED, FOREIGN KEY(`servicePromotionsId`) REFERENCES `service_promotions`(`servicePromotionId`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED, FOREIGN KEY(`meterValuesId`) REFERENCES `meter_values`(`meterValueId`) ON UPDATE NO ACTION ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)",
        "fields": [
          {
            "fieldPath": "receiptLineId",
            "columnName": "receiptLineId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isPaid",
            "columnName": "isPaid",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "receiptsId",
            "columnName": "receiptsId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "servicesId",
            "columnName": "servicesId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "ratesId",
            "columnName": "ratesId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "servicePromotionsId",
            "columnName": "servicePromotionsId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "meterValuesId",
            "columnName": "meterValuesId",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "receiptLineId"
          ],
          "autoGenerate": false
        },
        "indices": [
          {
            "name": "index_receipt_lines_receiptsId",
            "unique": false,
            "columnNames": [
              "receiptsId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_receipt_lines_receiptsId` ON `${TABLE_NAME}` (`receiptsId`)"
          },
          {
            "name": "index_receipt_lines_servicesId",
            "unique": false,
            "columnNames": [
              "servicesId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_receipt_lines_servicesId` ON `${TABLE_NAME}` (`servicesId`)"
          },
          {
            "name": "index_receipt_lines_ratesId",
            "unique": false,
            "columnNames": [
              "ratesId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_receipt_lines_ratesId` ON `${TABLE_NAME}` (`ratesId`)"
          },
          {
            "name": "index_receipt_lines_servicePromotionsId",
            "unique": false,
            "columnNames": [
              "servicePromotionsId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_receipt_lines_servicePromotionsId` ON `${TABLE_NAME}` (`servicePromotionsId`)"
          },
          {
            "name": "index_receipt_lines_meterValuesId",
            "unique": false,
            "columnNames": [
              "meterValuesId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_receipt_lines_meterValuesId` ON `${TABLE_NAME}` (`meterValuesId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "receipts",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "receiptsId"
            ],
            "referencedColumns": [
              "receiptId"
            ]
          },
          {
            "table": "services",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "servicesId"
            ],
            "referencedColumns": [
              "serviceId"
            ]
          },
          {
            "table": "rates",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "ratesId"
            ],
            "referencedColumns": [
              "rateId"
            ]
          },
          {
            "table": "service_promotions",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "servicePromotionsId"
            ],
            "referencedColumns": [
              "servicePromotionId"
            ]
          },
          {
            "table": "meter_values",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "meterValuesId"
            ],
            "referencedColumns": [
              "meterValueId"
            ]
          }
        ]
      }
    ],
    "views": [
      {
        "viewName": "meters_view",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT m.*, mtl.*, ps.payerServiceId, ps.servicesId\nFROM meters AS m JOIN meters_tl AS mtl ON mtl.metersId = m.meterId\n    JOIN payers_services_meters AS psm ON psm.metersId = m.meterId\n    JOIN payers_services AS ps ON ps.payerServiceId = psm.payersServicesId\n    JOIN services AS s ON s.serviceId = ps.servicesId\nORDER BY ps.payersId, s.pos"
      },
      {
        "viewName": "services_view",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT s.*, stl.* FROM services AS s JOIN services_tl AS stl ON stl.servicesId = s.serviceId\nORDER BY s.pos"
      },
      {
        "viewName": "meter_value_max_prev_dates_view",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT v.metersId, MAX(datetime(v.valueDate)) maxValueDate \n    FROM meter_values v JOIN meters m ON m.meterId = v.metersId\n        JOIN payers AS p ON p.payerId = m.payersId\n    WHERE datetime(v.valueDate) <= CASE WHEN datetime('now') > datetime('now', 'start of month', '+' || (IFNULL(p.paymentDay, 20) - 1) || ' days')\n            THEN datetime('now', 'start of month', '+' || (IFNULL(p.paymentDay, 20) - 1) || ' days')\n            ELSE datetime('now', '-1 months', 'start of month', '+' || (IFNULL(p.paymentDay, 20) - 1) || ' days') END\nGROUP BY v.metersId"
      },
      {
        "viewName": "meter_value_payment_periods_view",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT mv.*, lv.payerId, lv.payerServiceId, lv.paymentDate,\n    CAST(strftime('%m', lv.paymentDate) AS INTEGER) AS paymentMonth, \n    CAST(strftime('%Y', lv.paymentDate) AS INTEGER) AS paymentYear\nFROM meter_values mv JOIN \n        (SELECT p.payerId, ps.payerServiceId, m.meterId, MAX(datetime(v.valueDate)) maxValueDate, \n            (CASE \n                WHEN datetime(v.valueDate) \n                    BETWEEN datetime(v.valueDate, 'start of month') \n                        AND datetime(v.valueDate, 'start of month', '+' || (IFNULL(p.paymentDay, 20) - 1) || ' days') \n                    THEN datetime(v.valueDate, 'start of month') \n                WHEN datetime(v.valueDate) \n                    BETWEEN datetime(v.valueDate, 'start of month', '+' || IFNULL(p.paymentDay, 20) || ' days') \n                        AND datetime(v.valueDate, '+1 months', 'start of month') \n                    THEN datetime(v.valueDate, '+1 months', 'start of month') \n            END) paymentDate\n        FROM meter_values v JOIN meters m ON m.meterId = v.metersId \n            JOIN payers_services_meters AS psm ON psm.metersId = m.meterId \n            JOIN payers_services AS ps ON ps.payerServiceId = psm.payersServicesId \n            JOIN payers AS p ON p.payerId = ps.payersId \n        GROUP BY p.payerId, ps.payerServiceId, m.meterId,\n            (CASE \n                WHEN datetime(v.valueDate) \n                    BETWEEN datetime(v.valueDate, 'start of month') \n                        AND datetime(v.valueDate, 'start of month', '+' || (IFNULL(p.paymentDay, 20) - 1) || ' days') \n                    THEN datetime(v.valueDate, 'start of month') \n                WHEN datetime(v.valueDate) \n                    BETWEEN datetime(v.valueDate, 'start of month', '+' || IFNULL(p.paymentDay, 20) || ' days') \n                        AND datetime(v.valueDate, '+1 months', 'start of month') \n                    THEN datetime(v.valueDate, '+1 months', 'start of month') \n            END)) lv \n    ON mv.metersId = lv.meterId AND datetime(mv.valueDate) = lv.maxValueDate"
      },
      {
        "viewName": "rate_service_last_dates_view",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT r.* FROM rates r JOIN\n    (SELECT servicesId, payersServicesId, MAX(strftime('%Y-%m-%d %H:%M:%f', startDate)) maxStartDate\n        FROM rates GROUP BY servicesId, payersServicesId) rmd\n    ON r.servicesId = rmd.servicesId AND IFNULL(r.payersServicesId, '') = IFNULL(rmd.payersServicesId, '')\n        AND strftime('%Y-%m-%d %H:%M:%f', r.startDate) = rmd.maxStartDate"
      },
      {
        "viewName": "meter_value_prev_periods_view",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT mvl.meterValueId, mv.payersId AS payerId, mv.servicesId AS serviceId, \n    sv.type, sv.name, sv.pos, mv.meterId, IFNULL(mv.measureUnit, sv.measureUnit) AS measureUnit,\n    IFNULL(mvl.valueDate, datetime('now')) AS prevLastDate, mvl.meterValue AS prevValue, p.isFavorite,\n    (SELECT vl.meterValue FROM meter_values vl\n    WHERE vl.metersId = mvl.metersId\n        AND datetime(vl.valueDate) = (SELECT MAX(datetime(v.valueDate)) FROM meter_values v\n                                    WHERE v.metersId = mvl.metersId\n                                        AND datetime(v.valueDate) > mpd.maxValueDate)\n    ) AS currentValue,\n    mv.localeCode AS meterlocaleCode, sv.localeCode AS servicelocaleCode,\n    substr('#0.' || '0000000000', 1, 3 + (length(cast(mv.maxValue / 100000.0 as text)) - \n        CASE WHEN instr(cast(mv.maxValue / 100000.0 as text), '.') = length(cast(mv.maxValue / 100000.0 as text)) - 1\n            THEN length(cast(mv.maxValue / 100000.0 as text)) + 1 \n            ELSE instr(cast(mv.maxValue / 100000.0 as text), '.') END)\n    ) AS valueFormat \nFROM meters_view AS mv JOIN services_view AS sv ON sv.serviceId = mv.servicesId \n    JOIN meter_values AS mvl ON mvl.metersId = mv.meterId \n    JOIN payers AS p ON p.payerId = mv.payersId \n    JOIN meter_value_max_prev_dates_view AS mpd ON mpd.metersId = mvl.metersId AND mpd.maxValueDate = datetime(mvl.valueDate)"
      },
      {
        "viewName": "meter_value_payments_view",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT lmv.payerId, lmv.payerServiceId, lmv.metersId, pmv.meterValue AS startMeterValue, lmv.meterValue AS endMeterValue, \n    (CASE WHEN instr((SELECT measureUnit FROM meters_tl WHERE metersId = lmv.metersId LIMIT 1), '/') = 0 \n        THEN 0 \n        ELSE 1 END) AS derivedUnit, \n    (CASE WHEN instr((SELECT measureUnit FROM meters_tl WHERE metersId = lmv.metersId LIMIT 1), '/') = 0 \n        THEN (lmv.meterValue - pmv.meterValue) ELSE lmv.meterValue END) AS diffMeterValue, \n        lmv.paymentDate, lmv.paymentMonth, lmv.paymentYear \nFROM meter_value_payment_periods_view lmv \n    JOIN meter_value_payment_periods_view pmv ON pmv.metersId = lmv.metersId \n        AND pmv.paymentDate = datetime(lmv.paymentDate, '-1 months')"
      },
      {
        "viewName": "rate_service_with_privileges_view",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT rsd.* FROM rate_service_last_dates_view rsd JOIN\n    (SELECT servicesId, payersServicesId FROM rate_service_last_dates_view\n    EXCEPT \n    SELECT servicesId, payersServicesId FROM rate_service_last_dates_view WHERE isPrivileges = 1) rwp\n        ON rsd.isPrivileges = 0 AND rsd.servicesId = rwp.servicesId \n            AND IFNULL(rsd.payersServicesId, '') = IFNULL(rwp.payersServicesId, '')\nUNION ALL\nSELECT rsd.* FROM rate_service_last_dates_view rsd JOIN\n    (SELECT servicesId, payersServicesId FROM rate_service_last_dates_view WHERE isPrivileges = 1) rp\n        ON rsd.isPrivileges = 1 AND rsd.servicesId = rp.servicesId \n            AND IFNULL(rsd.payersServicesId, '') = IFNULL(rp.payersServicesId, '')"
      },
      {
        "viewName": "rate_payer_services_view",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT p.payerId, p.personsNum, p.totalArea, p.livingSpace, p.heatedVolume, ps.payerServiceId, ps.isAllocateRate, \n    sv.serviceId, sv.name, sv.pos, r.fromMeterValue, r.toMeterValue, r.rateValue, r.isPerPerson, r.isPrivileges\nFROM payers p JOIN payers_services ps ON ps.payersId = p.payerId \n    JOIN services_view AS sv ON sv.serviceId = ps.servicesId\n    JOIN (SELECT rsd.* FROM rate_service_with_privileges_view rsd JOIN\n            (SELECT rsp.servicesId\n                FROM rate_service_with_privileges_view rsp \n                    JOIN (SELECT servicesId FROM payers_services GROUP BY servicesId) ps ON rsp.servicesId = ps.servicesId \n                                                                                        AND rsp.payersServicesId IS NULL\n            EXCEPT\n            SELECT rsp.servicesId\n            FROM rate_service_with_privileges_view rsp JOIN payers_services ps ON rsp.payersServicesId = ps.payerServiceId) rs\n                ON rsd.payersServicesId IS NULL AND rsd.servicesId = rs.servicesId) r\n        ON r.servicesId = ps.servicesId\nUNION ALL\n-- rate for payers\nSELECT p.payerId, p.personsNum, p.totalArea, p.livingSpace, p.heatedVolume, ps.payerServiceId, ps.isAllocateRate, \n    sv.serviceId, sv.name, sv.pos, r.fromMeterValue, r.toMeterValue, r.rateValue, r.isPerPerson, r.isPrivileges\nFROM payers p JOIN payers_services ps ON ps.payersId = p.payerId \n    JOIN services_view AS sv ON sv.serviceId = ps.servicesId\n    JOIN (SELECT rsd.* FROM rate_service_with_privileges_view rsd JOIN\n            (SELECT rsp.payersServicesId FROM rate_service_with_privileges_view rsp JOIN payers_services ps \n                                                ON rsp.payersServicesId = ps.payerServiceId) rp\n                ON rsd.payersServicesId = rp.payersServicesId) r\n        ON r.payersServicesId = ps.payerServiceId"
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'f3ad704bfa4f2a5b1dd0a4ba7f0e090a')"
    ]
  }
}